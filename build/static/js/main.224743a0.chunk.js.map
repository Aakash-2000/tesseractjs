{"version":3,"sources":["logo.svg","photos/logo.png","photos/p1.png","photos/p2.png","Mainpage.js","App.js","reportWebVitals.js","index.js"],"names":["Mainpage","props","convert","worker","createWorker","logger","m","console","log","a","load","loadLanguage","initialize","recognize","state","img","text","data","setState","words","doOCR","copy","document","getElementById","select","setSelectionRange","execCommand","upload","e","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","img1","this","p1","img2","className","src","p2","style","boxShadow","logo","marginTop","action","class","id","width","height","type","onChange","accept","overflow","onClick","color","marginRight","value","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kOAAe,I,6ECAA,MAA0B,iCCA1B,MAA0B,+BCA1B,MAA0B,+BCqH1BA,E,kDA7GX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,QAAQ,WACR,IAAMC,EAASC,uBAAa,CACxBC,OAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,OAElB,uCAAG,8BAAAG,EAAA,sEACJN,EAAOO,OADH,uBAEJP,EAAOQ,aAAa,OAFhB,uBAGJR,EAAOS,WAAW,OAHd,uBAIuBT,EAAOU,UAAU,EAAKC,MAAMC,KAJnD,gBAIMC,EAJN,EAIFC,KAAQD,KAChB,EAAKE,SAAS,CACVC,MAAMH,IANA,4CAAH,qDASXI,GACAb,QAAQC,IAAI,EAAKM,MAAMK,QArBL,EAuBlBE,KAAK,WACD,IAAIL,EAAOM,SAASC,eAAe,kBACnCP,EAAKQ,SACLR,EAAKS,kBAAkB,EAAE,MACzBH,SAASI,YAAY,SA3BP,EA8BlBC,OAAO,SAACC,GACA,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAO,WACa,IAApBF,EAAOG,YACN,EAAKd,SAAS,CACVH,IAAIc,EAAOI,UAIvBJ,EAAOK,cAAcN,EAAEO,OAAOC,MAAM,KArCxC,EAAKtB,MAAM,CACPC,IAAI,GACJI,MAAM,IAJI,E,qDA2Cd,IAAMkB,EAAOC,KAAKxB,MAAMC,IAAKuB,KAAKxB,MAAMC,IAAIwB,EACtCC,EAAMF,KAAKxB,MAAMK,MAAM,KAAK,qBAAKsB,UAAU,iBAAiBC,IAAKC,IACvE,OACA,gCACK,qBAAKF,UAAU,0BAA0BG,MAAO,CAACC,UAAU,QAA3D,SACG,8BACG,mBAAGJ,UAAU,oBAAb,SAAiC,qBAAKA,UAAU,iBAAiBC,IAAKI,UAK7E,sBAAKL,UAAU,MAAMG,MAAO,CAACG,UAAU,QAAvC,UACA,sBAAKN,UAAU,aAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,iBAAiBC,IAAKL,MAIzC,8BACA,sBAAMW,OAAO,IAAb,SACQ,qBAAKC,MAAM,yBAAX,SACI,yBAAQC,GAAG,YAAYN,MAAO,CAACO,MAAM,MAAMC,OAAO,QAAlD,yBAGI,uBAAOC,KAAK,OAAQC,SAAUhB,KAAKX,OAAQ4B,OAAO,wBActE,sBAAKd,UAAU,aAAf,UACI,sBAAKA,UAAU,YAAYG,MAAO,CAACY,SAAU,UAA7C,UACI,mBAAGf,UAAU,uBAAuBgB,QAASnB,KAAKjB,KAAMuB,MAAO,CAACc,MAAM,UAAUC,YAAY,MAAMZ,UAAU,OAA5G,0BAECP,EACD,0BAAUa,KAAK,OAAOH,GAAG,iBAAiBU,MAAOtB,KAAKxB,MAAMK,WAEhE,8BACA,sBAAM6B,OAAO,IAAb,SACQ,qBAAKC,MAAM,yBAAX,SACI,wBAAQC,GAAG,YAAYN,MAAO,CAACO,MAAM,MAAMC,OAAO,QAASK,QAASnB,KAAKpC,QAAzE,wC,GA5FL2D,IAAMC,WCIdC,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrD,SAASC,eAAe,SAM1ByC,M","file":"static/js/main.224743a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/logo.b88917d3.png\";","export default __webpack_public_path__ + \"static/media/p1.d379c5f7.png\";","export default __webpack_public_path__ + \"static/media/p2.0c3c2dc1.png\";","import React from \"react\";\r\nimport \"./Styles.css\";\r\nimport { createWorker } from \"tesseract.js\";\r\nimport logo from \"./photos/logo.png\";\r\nimport p1 from \"./photos/p1.png\";\r\nimport p2 from \"./photos/p2.png\";\r\nvar data=\"\"\r\nclass Mainpage extends React.Component{ \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            img:'',\r\n            words:''\r\n        }\r\n    }\r\n    convert=()=>{\r\n    const worker = createWorker({\r\n        logger: m => console.log(m),\r\n      });\r\n    const doOCR = async () => {\r\n        await worker.load();\r\n        await worker.loadLanguage('eng');\r\n        await worker.initialize('eng');\r\n        const { data: { text } } = await worker.recognize(this.state.img);\r\n        this.setState({\r\n            words:text\r\n        })\r\n    };\r\n    doOCR();\r\n    console.log(this.state.words)\r\n    }\r\n    copy=()=>{\r\n        var text = document.getElementById(\"converted_text\");\r\n        text.select();\r\n        text.setSelectionRange(0,9999);\r\n        document.execCommand(\"copy\");\r\n\r\n    }\r\n    upload=(e)=>{\r\n            const reader = new FileReader();\r\n            reader.onload=()=>{\r\n                if(reader.readyState===2){\r\n                    this.setState({\r\n                        img:reader.result\r\n                    })\r\n                }\r\n            }\r\n            reader.readAsDataURL(e.target.files[0]);\r\n            \r\n    }\r\n    render(){\r\n        const img1 = this.state.img? this.state.img:p1\r\n        const img2 =this.state.words?null:<img className=\"responsive-img\" src={p2}></img>\r\n        return(\r\n        <div>\r\n             <nav className=\"nav-wrapper transparent\" style={{boxShadow:\"none\"}}>\r\n                <div>\r\n                   <a className=\"brand-logo center\"><img className=\"responsive-img\" src={logo} ></img></a> \r\n                \r\n                </div>\r\n            </nav>\r\n        \r\n            <div className=\"row\" style={{marginTop:\"80px\"}}>\r\n            <div className=\"col s12 m6\">\r\n                <div className=\"container\">\r\n                    <img className=\"responsive-img\" src={img1}></img>\r\n                    \r\n                   \r\n                </div>\r\n                <div>\r\n                <form action=\"#\">\r\n                        <div class=\"file-field input-field\">\r\n                            <button id=\"uploadbtn\" style={{width:\"70%\",height:\"50px\"}}>\r\n                                \r\n                                Upload Image\r\n                                <input type=\"file\"  onChange={this.upload} accept=\"image/*\"/>\r\n                            </button>\r\n                            \r\n                        </div>\r\n                </form>\r\n                </div>\r\n               \r\n               \r\n                \r\n      \r\n                \r\n               \r\n                \r\n            </div>\r\n            <div className=\"col s12 m6\">\r\n                <div className=\"container\" style={{overflow: \"scroll\"}}>\r\n                    <i className=\"material-icons right\" onClick={this.copy} style={{color:\"#7b1fa2\",marginRight:\"5px\",marginTop:\"5px\"}}>content_copy</i>\r\n                    \r\n                    {img2}\r\n                    <textarea type=\"text\" id=\"converted_text\" value={this.state.words}/>\r\n                </div>\r\n                <div>\r\n                <form action=\"#\">\r\n                        <div class=\"file-field input-field\">\r\n                            <button id=\"uploadbtn\" style={{width:\"70%\",height:\"50px\"}} onClick={this.convert}>\r\n                                \r\n                                Convert \r\n                              \r\n                            </button>\r\n                            \r\n                        </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            </div>\r\n            \r\n        \r\n        </div>)\r\n    }\r\n}\r\nexport default Mainpage;","import logo from './logo.svg';\nimport './App.css';\nimport Mainpage from \"./Mainpage\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mainpage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}